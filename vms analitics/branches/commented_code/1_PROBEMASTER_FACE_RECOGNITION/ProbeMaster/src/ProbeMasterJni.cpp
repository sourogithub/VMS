


/* DO NOT EDIT THIS FILE - it is machine generated */
#include<string.h>
#include<stdio.h>
#include<stdlib.h>

/* Header for class com_dss_vms_jni_interfaces_StreamMaster */
#include "com_dss_vms_jni_interfaces_ProbeMaster.h"
#include "ProbeMaster.h"

/*
 * Class:     com_dss_vms_jni_interfaces_ProbeMaster
 * Method:    _initialize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_dss_vms_jni_interfaces_ProbeMaster__1initialize
(JNIEnv *env, jobject obj){
	ErrorTypes eT = DSS_SUCCESS;

	if ( DSS_SUCCESS != (eT = Initialize()) )
	{
		//TO DO: Handle the error

		return (UINT32)DSS_ERROR;
	}

	return (UINT32)(eT);

}

/*
 * Class:     com_dss_vms_jni_interfaces_ProbeMaster
 * Method:    _tearDown
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_dss_vms_jni_interfaces_ProbeMaster__1tearDown
(JNIEnv *env, jobject obj){

	ErrorTypes eT = DSS_SUCCESS;

	if ( DSS_SUCCESS != (eT = Teardown()) )
	{
		//TO DO: Handle the error

		return (UINT32)DSS_ERROR;
	}

	return (UINT32)eT;
}

/*
 * Class:     com_dss_vms_jni_interfaces_ProbeMaster
 * Method:    _addStream
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_dss_vms_jni_interfaces_ProbeMaster__1addStream
(JNIEnv *env, jobject obj, jobject jmappingBuffer){
	UINT8 *mappingBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jmappingBuffer));

	ErrorTypes eT = AddStream(mappingBuffer);
	return (UINT32)(eT);
}

/*
 * Class:     com_dss_vms_jni_interfaces_ProbeMaster
 * Method:    _removeStream
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_dss_vms_jni_interfaces_ProbeMaster__1removeStream
(JNIEnv *env, jobject obj, jobject jmappingBuffer){

	UINT8 *mappingBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jmappingBuffer));
	ErrorTypes eT = RemoveStream(mappingBuffer);

	return (UINT32)(eT);
}

/*
 * Class:     com_dss_vms_jni_interfaces_ProbeMaster
 * Method:    _setRegion
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_dss_vms_jni_interfaces_ProbeMaster__1setRegion
(JNIEnv *env, jobject obj, jobject jmappingBuffer, jobject jregionBuffer){

	UINT8 *mappingBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jmappingBuffer));
	UINT8 *regionBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jregionBuffer));
	//UINT8 *imageBuffer = reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jimageBuffer));

	ErrorTypes eT = SetRegion(mappingBuffer, regionBuffer);
	return (UINT32)(eT);

}

/*
 * Class:     com_dss_vms_jni_interfaces_ProbeMaster
 * Method:    _searchEvent
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_dss_vms_jni_interfaces_ProbeMaster__1searchEvent
(JNIEnv *env, jobject obj, jobject jmappingBuffer, jobject jimageBuffer, jobject jeventBuffer){
	UINT8 *mappingBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jmappingBuffer));
	UINT8 *imageBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jimageBuffer));
	UINT8 *eventBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jeventBuffer));
	ErrorTypes eT = SearchEvent(mappingBuffer, imageBuffer, eventBuffer);

	return (UINT32)(eT);
}

/*
 * Class:     com_dss_vms_jni_interfaces_ProbeMaster
 * Method:    _execute
 * Signature: (Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_dss_vms_jni_interfaces_ProbeMaster__1execute
(JNIEnv *env, jobject obj, jobject jmappingBuffer, jint jcommand, jobject jcmdInput){
	UINT8 *mappingBuffer =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jmappingBuffer));
	UINT8 *cmdInput =  reinterpret_cast<UINT8 *>((env)->GetDirectBufferAddress(jcmdInput));

	jclass cl=env->GetObjectClass(obj);
	jmethodID m=env->GetMethodID(cl,"execute","(I)I");
	UINT32 command = env->CallIntMethod(obj,m,jcommand);

	ErrorTypes eT = Execute(mappingBuffer, command, cmdInput);



	return DSS_SUCCESS;
}
